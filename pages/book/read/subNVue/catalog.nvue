<template>
    <div class="catalog" :style="{'background-color': skinColor.menuBgColor}" @touchmove.stop.prevent="">
		<view class="title">
			<text class="title-text">{{title}}目录</text>
		</view>
		<view class="line" :style="{'background-color': skinColor.gapColor}">
			<text class="line-text" :style="{color: skinColor.titleColor}">共{{list.length}}个{{title}}</text>
			<text class="clear" v-if="showClear" @tap="clear">清空</text>
		</view>
		<list-scroll ref="listScroll" :line-height="80" :list="list" :bounce="false" v-if="list.length > 0">
			<template v-slot="{item}">
				<view class="list actived" @click="clickItem(item)">
					<text class="list-text" :style="{color: scrollTo == item.chapter - 1 ? '#DD524D' : skinColor.menuTitleColor}">{{item.title}}</text>
				</view>
			</template>
		</list-scroll>
		<view class="nodata-view" v-if="list.length == 0">
			<text class="nodata" :style="{color: skinColor.menuTitleColor}">暂无{{title}}目录</text>
		</view>
    </div>
</template>

<script>
	import ListScroll from '@/components/list-scroll/list-scroll.nvue'
	import { skinMixin } from '@/common/mixin/index.js';
	import bookMixin from '@/common/mixin/book.js';
	const dom = weex.requireModule('dom')
    export default {
		mixins: [skinMixin, bookMixin],
		data() {
			return {
				list: [],
				title: '',
				path: '',
				showClear: false
			}
		},
		computed: {
			bookInfo () {
				return this.bookList[getApp().globalData.$utils.indexOf(this.bookList, 'path', this.path)];
			},
			scrollTo () {
				let len = this.list.length;
				if ( this.bookInfo.source == 'local' ) {
					if ( this.title == '章节' ) {
						let position = this.bookInfo.record.position;
						for ( let i = 0; i < len; i++ ) {
							if ( i < this.list.length - 1 ) {
								if ( position >= this.list[i].start && position < this.list[parseInt(i) + 1].start ) {
									return i
								}
							} else {
								if ( position >= this.list[i].start) {
									return i
								}
							}
						}
					} 
					if ( this.title == '书签' ) {
						for ( let i = 0; i < len; i++ ) {
							if ( position == this.list[i].start ) {
								return i
							}
						}
					}
				} else {
					if ( this.title == '章节' ) {
						let chapter = this.bookInfo.record.chapter;
						for ( let i = 0; i < len; i++ ) {
							if ( this.list[i].chapter == chapter ) {
								return i
							}
						}
					}
				}
			}
		},
		beforeCreate() {
			uni.$on('page-popup', (data) => {
			    this.list = data.list;
				this.title = data.title;
				this.path = data.path;
				this.showClear = data.showClear || false
			})  
		},
		beforeDestroy () {
			uni.$off('page-popup');
		},
        methods: {
			clickItem (item) {
				uni.$emit('change-page', item);
			},
			clear () {
				uni.$emit('setting', {
					type: 'clearMark'
				});
			}
        },
		components: {
			ListScroll
		}
    }
</script>

<style scoped>
	.catalog {
		width: 500rpx;
		position: fixed;
		right: 0;
		top: 0;
		flex: 1;
	}
	.list {
		justify-content: center;
		padding: 0 20rpx;
		height: 80rpx;
	}
	.list-text {
		lines: 1;
		font-size: 23rpx;
	}
	.title {
		padding: 40rpx 0;
		align-items: center;
	}
	.title-text {
		font-size: 32rpx;
		color: #DD524D;
	}
	.line {
		padding: 20rpx 30rpx;
		flex-direction: row;
		justify-content: space-between;
	}
	.line-text {
		font-size: 25rpx;
	}
	.clear {
		color: #DD524D;
		font-size: 25rpx;
	}
	.nodata-view {
		flex: 1;
		align-items: center;
		justify-content: center;
	}
	.nodata {
		font-size: 28rpx;
	}
</style>