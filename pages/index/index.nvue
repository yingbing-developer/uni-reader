<template>
	<view class="index" :style="{'background-color': skinColor.color_bg_1}">
		<nav-bar title="好用阅读器" :backShow="false" :bgColor="skinColor.color_theme_1" :titleColor="skinColor.color_4">
			<view class="nav-left" slot="left" @tap="$refs.leftMenu.show()">
				<c-icon name="menu" size="37.5" :color="skinColor.color_4"></c-icon>
			</view>
			<view class="nav-right" slot="right">
				<view @tap="searchBook">
					<c-icon name="search" size="37.5" :color="skinColor.color_4"></c-icon>
				</view>
				<view @tap="opearteFilter">
					<c-icon name="filter" size="37.5" :color="skinColor.color_4"></c-icon>
				</view>
			</view>
		</nav-bar>
		<c-search v-if="showFilter" @confirm="setNameFilter"></c-search>
		<view class="tabs" :style="{'background-color': skinColor.color_theme_1}">
			<view class="tab" @tap="changeTab(index)" v-for="(item, index) in tabs" :key="index">
				<text class="tab-title" :style="{'color': skinColor.color_4}">{{item.title}}</text>
			</view>
			<view class="tab-line" :style="{'background-color': skinColor.color_bg_1 , transform: `translateX(${currentTab * 375}rpx)`}">
			</view>
		</view>
		<list-scroll :column-count="3" :column-width="230" :line-height="285" @scroll="scroll" :list="list"
			:scrollable="scrollable">
			<no-data slot="fixed" v-if="list.length <= 0" :title="noDataTitle"></no-data>
			<view class="touch" slot="fixed" @touchstart="touchstart" @touchmove="touchmove" @touchend="touchend">
			</view>
			<view class="fixed" slot="fixed">
				<view @tap="changeReadStatus">
					<fixed-button :color="skinColor.color_theme_1">
						<c-icon name="history" size="40" :color="skinColor.color_4" v-if="!tabs[currentTab].isReaded">
						</c-icon>
						<c-icon name="read" size="47.5" :color="skinColor.color_4" v-if="tabs[currentTab].isReaded">
						</c-icon>
					</fixed-button>
				</view>
				<view @tap="clear">
					<fixed-button :color="skinColor.color_theme_1" :show="list.length > 0">
						<c-icon name="waste-fill" size="40" :color="skinColor.color_4"></c-icon>
					</fixed-button>
				</view>
				<view @tap="searchOnline">
					<fixed-button :color="skinColor.color_theme_1">
						<c-icon name="network" size="40" :color="skinColor.color_4"></c-icon>
					</fixed-button>
				</view>
				<view @tap="scrollTop">
					<fixed-button :color="skinColor.color_theme_1" :show="Math.abs(oldOffsetY) > 2000">
						<c-icon name="top" size="40" :color="skinColor.color_4"></c-icon>
					</fixed-button>
				</view>
			</view>
			<view slot="listTop" ref="listTop"></view>
			<template v-slot="{item}">
				<view class="book" @tap="readBook(item.path)" @longpress="showAction(item.path)">
					<c-image class="book-img" :src="item.image" mode="aspectFill"></c-image>
					<view class="book-bottom">
						<text class="book-name">{{item.name}}</text>
						<view class="b-bottom">
							<text class="book-progress" v-if="item.type == 'story'">{{ item | progress }}</text>
							<text class="book-progress" v-if="item.type == 'comic'">{{ item | comicProgress }}</text>
						</view>
					</view>
				</view>
			</template>
		</list-scroll>
		
		<!-- 抽屉菜单 -->
		<c-menu v-model="currentTab" :translate="menuLate" :opacity="menuOpac" ref="leftMenu"></c-menu>
		
		<music-btn></music-btn>
		<music-lyric></music-lyric>
	</view>
</template>

<script>
	import CIcon from '@/components/c-icon/c-icon.nvue'
	import CMenu from '@/pages/menu/menu.nvue'
	import CSearch from '@/components/search/search.nvue'
	import ListScroll from '@/components/list-scroll/list-scroll.nvue'
	import NoData from '@/components/no-data/no-data.nvue'
	import CImage from '@/components/c-image/c-image.nvue'
	import MusicBtn from '@/components/music-btn/music-btn.nvue'
	import MusicLyric from '@/components/music-lyric/music-lyric.nvue'
	import { menuTouchMixin } from '@/common/mixin/index.js'
	import bookMixin from '@/common/mixin/book.js';
	import bookcertifyMixin from '@/common/mixin/bookcertify.js';
	import appMixin from '@/common/mixin/app.js';
	const dom = weex.requireModule('dom');
	export default {
		mixins: [menuTouchMixin, bookMixin, bookcertifyMixin, appMixin],
		data() {
			return {
				currentTab: 0,
				tabs: [{
					title: '小说',
					isReaded: false
				}, {
					title: '漫画',
					isReaded: false
				}],
				//滚动距离
				oldOffsetY: 0,
				//触发操作列表的图书路径
				actionPath: '',
				//名称过滤
				nameFilter: '',
				//是否显示过滤器
				showFilter: false
			}
		},
		filters: {
			progress(value) {
				if (value.source == 'local') {
					if (value.record.position == 0) {
						return '已阅读至 ' + 0 + '%'
					} else {
						return '已阅读至 ' + ((value.record.position / value.length) * 100).toFixed(2) + '%';
					}
				} else {
					return value.record.chapter > -1 ? '已阅读至 ' + value.record.title : '未阅读';
				}
			},
			comicProgress(value) {
				return value.record.chapter > -1 ? '已阅读至 ' + value.record.title : '未阅读'
			}
		},
		computed: {
			noDataTitle() {
				if (this.currentTab == 0) {
					return this.tabs[this.currentTab].isReaded ? '没有读完的小说哦！' : '没有正在阅读的小说哦！';
				} else {
					return this.tabs[this.currentTab].isReaded ? '没有看完的漫画哦！' : '没有正在看的漫画哦！';
				}
			},
			list() {
				let type = this.currentTab == 0 ? 'story' : 'comic';
				let arr = this.bookList.filter((item) => {
					if (item.name.indexOf(this.nameFilter) > -1 && item.isReaded == this.tabs[this.currentTab]
						.isReaded && item.type == type && (getApp().globalData.$config.ADULTS.indexOf(item.source) == -1 || this.getAdult) ) {
						return item;
					}
				})
				return arr.sort((a, b) => {
					return parseInt(b.lastReadTime) - parseInt(a.lastReadTime);
				});
			}
		},
		methods: {
			scroll(e) {
				this.oldOffsetY = e.contentOffset.y;
			},
			clear() {
				getApp().globalData.$dom.confirm('操作提示', '是否清空当前所有书籍？').then((res) => {
					if (res == 'confirm') {
						let type = this.currentTab == 0 ? 'story' : 'comic';
						this.clearBooks(type);
					}
				});
			},
			showAction(path) {
				this.actionPath = path;
				getApp().globalData.$dom.actionSheet([{
					title: '删除',
					value: 'delete'
				}]).then((res) => {
					if (res.value == 'delete') {
						let name = this.bookList[getApp().globalData.$utils.indexOf(this.bookList, 'path', this
							.actionPath)].name;
						getApp().globalData.$dom.confirm('操作提示', '是否删除  ' + name + '  ？').then((res) => {
							if (res == 'confirm') {
								this.deleteBook(this.actionPath);
								this.actionPath = '';
							}
						});
					}
				})
			},
			changeReadStatus() {
				this.$set(this.tabs[this.currentTab], 'isReaded', !this.tabs[this.currentTab].isReaded);
			},
			changeTab(current) {
				this.currentTab = current;
				this.oldOffsetY = 0;
			},
			//打开/隐藏名称过滤器
			opearteFilter() {
				this.showFilter = !this.showFilter;
			},
			//设置名称过滤
			setNameFilter(e) {
				this.nameFilter = e;
			},
			scrollTop() {
				dom.scrollToElement(this.$refs.listTop, {
					animated: false
				});
			},
			//读取书籍
			readBook(path) {
				let index = getApp().globalData.$utils.indexOf(this.bookList, 'path', path);
				if (this.bookList[index].source == 'local') {
					let fd = plus.android.newObject("java.io.File", path);
					if (fd == null || !plus.android.invoke(fd, 'exists')) {
						plus.nativeUI.toast("文件路径不存在！", {
							verticalAlign: 'center'
						});
						this.deleteBook(path);
						return;
					}
				}
				if (this.bookList[index].type == 'story') {
					this.setBookInfo(this.bookList[index]);
					if (this.bookList[index].source == 'local') {
						getApp().globalData.$Router.push({
							path: '/pages/book/read/index'
						});
					} else {
						getApp().globalData.$Router.push({
							path: '/pages/book/detail/index'
						});
					}
				} else if (this.bookList[index].type == 'comic') {
					getApp().globalData.$Router.push({
						path: '/pages/comic/detail/index',
						query: {
							index: index
						}
					});
				} else {
					uni.showToast({
						title: '无法识别的书籍类型',
						icon: 'none'
					})
					this.deleteBook(path);
				}
			},
			//搜索本地书籍
			searchBook() {
				if (this.currentTab == 0) {
					getApp().globalData.$Router.push({
						path: '/pages/book/search/index'
					});
				} else {
					getApp().globalData.$Router.push({
						path: '/pages/comic/search/index'
					});
				}
			},
			//搜索在线书籍
			searchOnline() {
				if (this.currentTab == 0) {
					getApp().globalData.$Router.push({
						path: '/pages/book/online/index'
					});
				} else {
					getApp().globalData.$Router.push({
						path: '/pages/comic/online/index'
					});
				}
			}
		},
		onBackPress(event) {
			if (this.$refs.leftMenu.isShow) {
				this.$refs.leftMenu.hide();
				return true;
			}
			return false;
		},
		components: {
			CIcon,
			CMenu,
			NoData,
			CSearch,
			ListScroll,
			CImage,
			MusicBtn,
			MusicLyric
		}
	}
</script>

<style scoped>
	.tabs {
		flex-direction: row;
		justify-content: center;
		position: relative;
	}

	.tab {
		flex: 1;
		height: 75rpx;
		justify-content: center;
		align-items: center;
	}

	.tab-title {
		font-size: 28rpx;
	}

	.tab-line {
		position: absolute;
		bottom: 0;
		left: 0;
		height: 5rpx;
		width: 375rpx;
		transition: transform 0.3s;
	}

	.content {
		flex: 1;
	}

	.touch {
		position: fixed;
		top: 0;
		left: 0;
		bottom: 0;
		width: 15rpx;
	}

	.book {
		width: 230rpx;
		position: relative;
		height: 285rpx;
	}

	.book-img {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}

	.book-bottom {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		height: 100rpx;
		background-color: rgba(0, 0, 0, 0.5);
		justify-content: space-between;
		padding: 18rpx 7.5rpx;
	}

	.book-name {
		font-size: 24rpx;
		color: #FFFFFF;
		lines: 1;
		text-overflow: ellipsis;
		text-align: center;
	}

	.b-bottom {
		flex-direction: row;
		justify-content: center;
	}

	.book-progress {
		font-size: 22rpx;
		color: #EEEEEE;
		lines: 1;
		text-overflow: ellipsis;
	}

	.book-tip {
		position: absolute;
		right: 0;
		top: 10rpx;
	}

	.nav-left {
		margin-right: 60rpx;
	}

	.nav-right {
		width: 120rpx;
		height: 100%;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}

	.fixed {
		position: fixed;
		bottom: 20px;
		right: 20px;
		width: 90rpx;
		align-items: center;
		justify-content: flex-end;
	}
</style>
