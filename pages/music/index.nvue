<template>
	<view class="music" :style="{'background-color': skinColor.color_bg_1}">
		<swiper
		:style="{'height': (statusBarHeight + 130) + 'px'}"
		class="ad-swiper"
		circular
		:indicator-dots="true"
		:indicator-color="skinColor.color_bg_1"
		:indicator-active-color="skinColor.color_actived_1"
		:autoplay="true"
		:interval="3000"
		:duration="1000">
			<swiper-item v-for="(item, index) in 3" :key="index">
				<rd-image lazyLoad class="ad" src="https://www.kugou.com/ts/Public/static/img/banner_download2.png" mode="aspectFill"></rd-image>
			</swiper-item>
		</swiper>
		<list class="list">
			<yb-pulldown ref="pulldown" :color="skinColor.color_1" @pulldown="pulldown"></yb-pulldown>
			<cell>
				<view class="singer-line opac-actived" :style="{'background-color': skinColor.color_theme_2}" @tap="app.$Router.push({path: '/pages/music/search'})">
					<view class="singer-left">
						<rd-icon name="search" color="#ffa916" size="50"></rd-icon>
						<text class="singer-text" :style="{color: skinColor.color_1}">搜索歌曲/歌手</text>
					</view>
					<view class="go">
						<text class="go-text">GO</text>
					</view>
				</view>
			</cell>
			<cell>
				<view class="types">
					<view class="type opac-actived"
					v-for="(item, index) in hotRanks"
					@tap="goRank(item)"
					:key="index"
					:style="{
						'background-color': skinColor.color_theme_2,
						'margin-right': ((parseInt(index / 4) + 1) * 4) - 1 == index ? '0' : '24rpx'
					}">
						<text class="type-text" :style="{color: skinColor.color_1}">{{item.title}}</text>
						<rd-icon name="arrow-right" v-if="index == 7" :color="skinColor.color_1" @click="goRank(item)"></rd-icon>
					</view>
				</view>
			</cell>
			
			<!-- 推荐歌单 -->
			<rd-header title="推荐歌单"></rd-header>
			<cell>
				<rd-grid title="推荐歌单" :data="hotSheets" :recom-index="6" @more="app.$Router.push({path: '/pages/music/mix'})" @clickTo="goDetail(item)"></rd-grid>
			</cell>
			
			<!-- 热门歌手 -->
			<rd-header title="热门歌手"></rd-header>
			<cell>
				<view class="padding-gap">
					<rd-title title="热门歌手" moreText="更多" @more="app.$Router.push({path: '/pages/music/singer'})"></rd-title>
					<scroll-view :show-scrollbar="false" scroll-x="true" class="singers">
						<view class="singer"
						v-for="(item, index) in hotSingers" :key="index"
						:style="{'margin-right': index == hotSingers.length - 1 ? 0 : '24rpx'}"
						@tap="goDetail(item)">
							<rd-image lazyLoad border-radius="12" class="cover" src="https://www.kugou.com/ts/Public/static/img/banner_download2.png" mode="aspectFill"></rd-image>
							<text class="name" :style="{color: skinColor.color_1}" @tap="goDetail(item)">周杰伦</text>
						</view>
					</scroll-view>
				</view>
			</cell>
			
			<!-- 新歌速递 -->
			<rd-header title="新歌速递"></rd-header>
			<cell>
				<rd-grid title="新歌速递" :data="hotSongs" :recom-index="6" @clickTo="goDetail(item)" @more="app.$Router.push({path: '/pages/music/song'})"></rd-grid>
				<yb-gap></yb-gap>
			</cell>
		</list>
	</view>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	import createOb from '@/js_sdk/overall-btn/index.js'
	export default {
		mixins: [appMixin],
		data () {
			return {
				statusBarHeight: 0,
				hotRanks: [],//首页展示排行榜
				toplist: [],//所有排行榜
				hotSheets: [1,2,3,4,5,6,7],
				hotSongs: [1,2,3,4,5,6,7],
				hotSingers: [1,2,3,4,5,6]
			}
		},
		onLoad () {
			this.statusBarHeight = uni.getSystemInfoSync().statusBarHeight
			this.getToplist();
		},
		onShow () {
			getApp().globalData.$business.setSkinColor();
		},
		onReady() {
			const ob = createOb({
				size: uni.upx2px(60),
				left: uni.getSystemInfoSync().windowWidth - 50,
				top: uni.getSystemInfoSync().windowHeight - 60,
				opacity: 0.3,
				border: 1,
				touch: true,
				func: (e) => {
					ob.draw(this.skinMode == 'night' ? '日' : '夜')
					this.changeSkin(this.skinMode == 'night' ? 'default' : 'night')
				}
			})
			ob.show();
		},
		methods: {
			pulldown () {
				setTimeout(() => {
					this.$refs.pulldown.success()
				}, 1000)
			},
			getToplist () {
				const MUSICURL = getApp().globalData.$config.MUSICURL
				let arr = []
				Object.keys(MUSICURL).forEach(key => {
					arr.push(key)
				})
				getApp().globalData.$api.music.getToplist(arr).then((ress) => {
					let hotRanks = []
					let toplist = []
					ress.forEach((res, index) => {
						if ( res.code == getApp().globalData.$config.ERR_OK ) {
							if ( index < 2 ) {
								const hot = res.data.list.filter((item, key) => {
									if ( index == 0 ) {
										return key < 3
									} else {
										return key >= 7 && key <= 10
									}
								})
								hotRanks = hotRanks.concat(hot)
								const top = res.data.list.filter((item, key) => item.title.indexOf('MV') == -1)
								toplist.push({
									list: top,
									source: res.data.source
								})
							}
							
						}
					})
					hotRanks.push({
						title: '更多'
					})
					this.hotRanks = hotRanks
					this.toplist = toplist
				})
			},
			goDetail (item) {
				getApp().globalData.$Router.push({
					path: '/pages/music/detail',
					query: {
						item: encodeURIComponent(JSON.stringify({name: '歌单'}))
					}
				})
			},
			goRank (item) {
				if ( item.title == '更多' ) {
					getApp().globalData.$Router.push({
						path: '/pages/music/rank',
						query: {
							data: encodeURIComponent(JSON.stringify(this.toplist))
						}
					})
				} else {
					this.goDetail(item)
				}
			}
		}
	}
</script>

<style scoped>
	.ad-swiper {
		height: 200rpx;
	}
	.ad-swiper .ad {
		flex: 1;
	}
	.singer-line {
		height: 120rpx;
		margin: 24rpx 30rpx;
		border-radius: 16rpx;
		padding: 0 30rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}
	.singer-line .singer-left {
		flex-direction: row;
		align-items: center;
	}
	.singer-line .singer-text {
		font-weight: bold;
		font-size: 36rpx;
		margin-left: 45rpx;
	}
	.singer-line .go {
		width: 80rpx;
		height: 80rpx;
		border-radius: 80rpx;
		background: linear-gradient(to bottom, #ffdca0, #ffab1f);
		align-items: center;
		justify-content: center;
	}
	.singer-line .go .go-text {
		font-weight: bold;
		font-size: 38rpx;
		color: #fff;
	}
	.types {
		flex-direction: row;
		justify-content: center;
		flex-wrap: wrap;
		padding: 0 30rpx;
	}
	.types .type {
		width: 150rpx;
		height: 64rpx;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		margin: 0 0 24rpx 0;
	}
	.types .type .type-text {
		font-size: 24rpx;
	}
	
	.singers {
		flex-direction: row;
	}
	.singers .singer {
		width: 160rpx;
	}
	.singers .singer .cover {
		width: 160rpx;
		height: 200rpx;
	}
	.singers .singer .name {
		font-size: 24rpx;
		lines: 1;
		text-align: center;
		margin: 10rpx 0;
	}
</style>
