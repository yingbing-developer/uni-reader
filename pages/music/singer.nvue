<template>
	<view class="mix" :style="{'background-color': skinColor.color_bg_1}">
		<yb-nav-bar :bgColor="skinColor.color_theme_1" :frontColor="skinColor.color_4" :title="title + ' - 歌手'"></yb-nav-bar>
		<yb-swiper-list
		:tabs="tabs"
		@change="changeTab"
		:frontColor="skinColor.color_2"
		:borderColor="skinColor.color_3"
		:activedColor="skinColor.color_actived_1">
			<template v-slot="{swiperSlot}">
				<yb-index-list :data="list[swiperSlot.index].child" :headerBgColor="skinColor.color_theme_1" v-if="list[swiperSlot.index].child.length > 0">
					<template slot="pulldown">
						<yb-pulldown
						v-if="!list[swiperSlot.index].loading"
						:ref="'pulldown_' + swiperSlot.index"
						:color="skinColor.color_1"
						@pulldown="pulldown(swiperSlot.index)"></yb-pulldown>
					</template>
					<template v-slot="{indexItem}">
						<view class="item" :class="skinMode + '-actived'" :style="{'border-color': skinColor.color_gap_1}">
							<rd-image lazyLoad class="cover" :src="indexItem.cover" mode="aspectFill"></rd-image>
							<text class="name" :style="{color: skinColor.color_1}">{{indexItem.title}}</text>
						</view>
					</template>
				</yb-index-list>
				<view class="loading" v-if="list[swiperSlot.index].child.length == 0">
					<yb-loading :color="skinColor.color_3" size="70" title="加载中" v-if="list[swiperSlot.index].loading" /></yb-loading>
					<yb-no-data title="暂无数据" v-if="list[swiperSlot.index].child.length == 0 && !list[swiperSlot.index].loading" /></yb-no-data>
				</view>
			</template>
		</yb-swiper-list>
		<music-panel :data="panelData" :visible.sync="panelShow"></music-panel>
	</view>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	import pinyin from '@/assets/other/pinyin.js'
	export default {
		mixins: [appMixin],
		data () {
			return {
				list: [],
				tabs: [],
				current: 0,
				panelData: '',
				panelShow: false
			}
		},
		onLoad() {
			this.getType().then(status => {
				if ( status ) {
					let list = []
					this.tabs.forEach(tab => {
						list.push({
							loading: true,
							child: []
						})
					})
					this.list = list
					this.getList(0)
				}
			})
		},
		computed: {
			source () {
				return getApp().globalData.$Route.query.source
			},
			title () {
				return getApp().globalData.$Route.query.title
			}
		},
		methods: {
			changeTab (e) {
				this.current = e.current
				if ( this.list[this.current].child.length == 0 ) {
					this.getList(this.current)
				}
			},
			pulldown (current) {
				this.getList(current).then(status => {
					if ( status ) {
						this.$refs['pulldown_' + current].success()
					} else {
						this.$refs['pulldown_' + current].fail()
					}
				}).catch(() => {
					this.$refs['pulldown_' + current].fail()
				})
			},
			async getType () {
				return await getApp().globalData.$api.music.getSingerType({source: this.source}).then((res) => {
					if ( res.code == getApp().globalData.$config.ERR_OK ) {
						let tabs = []
						res.data.list.forEach(item => {
							tabs.push({
								label: item.title,
								value: item.typeId,
								source: item.source
							})
						})
						this.tabs = tabs
					}
					return this.tabs.length > 0
				})
			},
			async getList (current) {
				let arr = []
				return await getApp().globalData.$api.music.getSinger({
					source: this.tabs[current].source,
					area: this.tabs[current].value,
				}).then((res) => {
					let list = []
					if ( res.code == getApp().globalData.$config.ERR_OK ) {
						list = res.data.list.map(item => {
							return Object.assign(item, {
								index: pinyin.chineseToInitials(pinyin.chineseToPinYin(item.title.slice(0, 1))) || '#'
							})
						})
					}
					this.$set(this.list[current], 'child', list)
					this.$set(this.list[current], 'loading', false)
					return list.length > 0
				})
				
			},
			showMore () {
				this.panelData = {
					title: '不能说秘密《主题曲》',
					label: '周杰伦'
				}
				this.panelShow = true
			}
		}
	}
</script>

<style scoped>
	.loading {
		flex: 1;
		align-items: center;
		justify-content: center;
	}
	.item {
		flex-direction: row;
		align-items: center;
		height: 120rpx;
		padding: 0 30rpx;
		border-bottom-width: 1prx;
	}
	.item .cover {
		width: 90rpx;
		height: 90rpx;
	}
	.item .name {
		font-size: 28rpx;
		margin-left: 20rpx;
		lines: 1;
		flex: 1;
	}
</style>
