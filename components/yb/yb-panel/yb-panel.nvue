<template>
	<view class="pannel" v-if="visible">
		<yb-mask ref="mask" :style="{opacity: 0}" @click="hide" />
		<view class="popup" ref="popup" @touchmove.stop.prevent="" :style="{'height': height + 'rpx', transform: 'translateY(' + height + 'rpx)'}">
			<slot></slot>
		</view>
	</view>
</template>

<script>
	const animation = weex.requireModule('animation');
	export default {
		props: {
			height: {
				type: Number,
				default: 700
			},
			duration: {
				type: Number,
				default: 500
			},
			visible: {
				type: Boolean,
				default: false
			}
		},
		data () {
			return {
				opac: 1
			}
		},
		mounted () {
			if ( this.visible ) {
				this.show()
			}
		},
		methods: {
			show () {
				animation.transition(this.$refs.mask, {
				    styles: {
						opacity: this.opac
				    },
				    duration: this.duration, //ms
				    timingFunction: 'ease',
				    needLayout:false,
				    delay: 0 //ms
				})
				animation.transition(this.$refs.popup, {
				    styles: {
						transform: 'translateY(0)'
				    },
				    duration: this.duration, //ms
				    timingFunction: 'ease',
				    needLayout:false,
				    delay: 0 //ms
				})
			},
			hide () {
				animation.transition(this.$refs.mask, {
				    styles: {
						opacity: 0
				    },
				    duration: this.duration, //ms
				    timingFunction: 'ease',
				    needLayout:false,
				    delay: 0 //ms
				})
				animation.transition(this.$refs.popup, {
				    styles: {
						transform: 'translateY(' + this.height + 'px)'
				    },
				    duration: this.duration, //ms
				    timingFunction: 'ease',
				    needLayout:false,
				    delay: 0 //ms
				},(res) => {
					this.$emit('update:visible', false)
					this.$emit('hide')
				})
			}
		},
		watch: {
			visible (newVal) {
				if ( newVal ) {
					this.show()
				} else {
					this.hide()
				}
			}
		}
	}
</script>

<style scoped>
	.pannel {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
	.popup {
		position: fixed;
		bottom: 0;
		left: 0;
		right: 0;
	}
</style>
